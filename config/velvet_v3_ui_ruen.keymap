#include "keys_ru.h"
#include <dt-bindings/zmk/input_transform.h>
#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    behaviors {
        cap_sen: cap_sen {
            compatible = "zmk,behavior-hold-tap";
            label = "CAP_SEN";
            bindings = <&mo>, <&mkp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            hold-while-undecided;
        };

        hml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-key-positions = <6 8 7 19 18 30 31 32 20 44 45 33 21 9 10 22 34 35 23 11 41 42 43>;
            hold-trigger-on-release;
        };

        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 13 12 24 25 0 1 12 13 14 24 25 26 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40>;
        };

        par_td: par_td {
            compatible = "zmk,behavior-tap-dance";
            label = "(";
            #binding-cells = <0>;
            bindings = <&kp LPAR>, <&par_left>;
        };

        brace_td: brace_td {
            compatible = "zmk,behavior-tap-dance";
            label = "BRACE_TD";
            #binding-cells = <0>;
            bindings = <&kp LBRC>, <&d_brc>;
        };

        brace_td_ru: brace_td_ru {
            compatible = "zmk,behavior-tap-dance";
            label = "BRACE_TD_RU";
            #binding-cells = <0>;
            bindings = <&en LBRC>, <&d_brc_ru>;
        };
    };

    combos {
        compatible = "zmk,combos";

        cmben {
            bindings = <&layer_en>;
            key-positions = <3 4>;
            layers = <1 0>;
        };

        cmbru {
            bindings = <&layer_ru>;
            key-positions = <7 8>;
            layers = <0 1>;
        };
    };

    macros {
        to_ru: to_ru {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LC(N2))>;
            label = "TO_RU";
        };

        to_en: to_en {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LC(N1))>;
            label = "TO_EN";
        };

        layer_en: layer_en {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &to_en>;
            label = "LAYER_EN";
        };

        layer_ru: layer_ru {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 1 &to_ru>;
            label = "LAYER_RU";
        };

        en: en {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&to_en &macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_wait_time 10>,
                <&to_ru>,
                <&macro_wait_time 10>;

            label = "EN";
        };

        par_left: par_left {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LPAR &kp RPAR &kp LEFT>;
            label = "PAR_LEFT";
        };

        d_brc_ru: bracket_left_ru {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&en LBRC &en RBRC &kp LEFT>;
            label = "BRACKET_LEFT_RU";
        };

        d_brc: d_brc {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LBRC &kp RBRC &kp LEFT>;
            label = "D_BRC";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        en {
            bindings = <
&kp ESC  &kp Q        &kp W        &kp E         &kp R          &kp T                                  &kp Y        &kp U          &kp I         &kp O        &kp P           &kp LEFT_BRACKET
&kp TAB  &hml LWIN A  &hml LALT S  &hml LCTRL D  &hml LSHIFT F  &kp G                                  &kp H        &hmr RSHIFT J  &hmr LCTRL K  &hmr LALT L  &hmr RWIN SEMI  &kp SQT
&mo 9    &kp Z        &kp X        &kp C         &kp V          &kp B                                  &kp N        &kp M          &kp COMMA     &kp DOT      &kp SQT         &mo 9
                      &kp LEFT     &kp RIGHT     &kp LCTRL      &lt 2 SPACE  &kp BACKSPACE    &kp RET  &lt 3 SPACE  &mo 6          &kp UP        &kp DOWN
            >;

            display-name = "en";
        };

        ru {
            display-name = "ru";
            bindings = <
&kp ESC  &kp RU_CYRILLIC_SHORT_I   &kp RU_CYRILLIC_TSE         &kp RU_CYRILLIC_U          &kp RU_CYRILLIC_KA         &kp RU_CYRILLIC_IE                            &kp RU_CYRILLIC_EN  &kp RU_CYRILLIC_GHE        &kp RU_CYRILLIC_SHA        &kp RU_CYRILLIC_SHCHA     &kp RU_CYRILLIC_ZE         &kp RU_CYRILLIC_HA
&kp TAB  &hml LWIN RU_CYRILLIC_EF  &hml LALT RU_CYRILLIC_YERU  &hml LCTRL RU_CYRILLIC_VE  &hml LSHIFT RU_CYRILLIC_A  &kp RU_CYRILLIC_PE                            &kp RU_CYRILLIC_ER  &hmr RSHIFT RU_CYRILLIC_O  &hmr LCTRL RU_CYRILLIC_EL  &hmr LALT RU_CYRILLIC_DE  &hmr RWIN RU_CYRILLIC_ZHE  &kp RU_CYRILLIC_E
&mo 9    &kp RU_CYRILLIC_YA        &kp RU_CYRILLIC_CHE         &kp RU_CYRILLIC_ES         &kp RU_CYRILLIC_EM         &kp RU_CYRILLIC_I                             &kp RU_CYRILLIC_TE  &kp RU_CYRILLIC_SOFT_SIGN  &kp RU_CYRILLIC_BE         &kp RU_CYRILLIC_YU        &kp RU_CYRILLIC_E          &mo 9
                                   &kp LEFT                    &kp RIGHT                  &kp LCTRL                  &lt 2 SPACE         &kp BACKSPACE    &kp RET  &lt 4 SPACE         &mo 6                      &kp UP                     &kp DOWN
            >;
        };

        nav {
            bindings = <
&trans  &trans  &kp N7  &kp N8  &kp N9  &trans                    &trans        &kp HOME      &kp END      &trans         &trans  &trans
&trans  &trans  &kp N4  &kp N5  &kp N6  &trans                    &kp LEFT      &kp DOWN      &kp UP       &kp RIGHT      &trans  &trans
&trans  &kp N0  &kp N1  &kp N2  &kp N3  &trans                    &kp LC(LEFT)  &kp LC(HOME)  &kp LC(END)  &kp LC(RIGHT)  &trans  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &mo 5         &trans        &trans       &trans
            >;

            display-name = "nav";
        };

        sym {
            bindings = <
&trans  &kp HASH   &kp LT    &kp EQUAL  &kp GT    &kp GRAVE                    &kp CARET  &kp DQT    &kp UNDER  &kp SQT   &kp PIPE  &trans
&trans  &kp BSLH   &kp LPAR  &kp MINUS  &kp RPAR  &kp PLUS                     &kp PRCNT  &par_td    &kp SEMI   &kp RBRC  &kp EXCL  &kp QUESTION
&trans  &kp COMMA  &kp STAR  &kp COLON  &kp FSLH  &kp DLLR                     &kp AT     &brace_td  &kp TILDE  &kp AMPS  &kp DOT   &trans
                   &trans    &trans     &trans    &mo 5      &trans    &trans  &trans     &trans     &kp LBKT   &kp RBKT
            >;

            display-name = "sym";
        };

        sym_ru {
            display-name = "sym_ru";
            bindings = <
&kp RU_CYRILLIC_IO  &en HASH          &en LT    &kp EQUAL     &en GT       &en GRAVE                    &en CARET  &kp RU_DQT    &kp UNDER    &en SQT   &kp PIPE    &trans
&kp RU_NUMERO       &kp RU_BACKSLASH  &kp LPAR  &kp MINUS     &kp RPAR     &kp PLUS                     &kp PRCNT  &par_td       &kp RU_SEMI  &kp RBRC  &kp EXCL    &kp RU_QMARK
&trans              &kp RU_COMMA      &kp STAR  &kp RU_COLON  &kp RU_FSLH  &en DLLR                     &en AT     &brace_td_ru  &en TILDE    &en AMPS  &kp RU_DOT  &trans
                                      &trans    &trans        &trans       &mo 5      &trans    &trans  &trans     &trans        &en LBKT     &en RBKT
            >;
        };

        adj {
            bindings = <
&none  &none  &kp F1  &kp F2   &kp F3   &kp F4                   &none  &none         &none             &none         &none  &none
&none  &none  &kp F5  &kp F6   &kp F7   &kp F8                   &none  &kp C_VOL_DN  &kp K_MUTE        &kp C_VOL_UP  &none  &none
&none  &none  &kp F9  &kp F10  &kp F11  &kp F12                  &none  &kp K_PREV    &kp K_PLAY_PAUSE  &kp K_NEXT    &none  &none
              &none   &none    &none    &none    &none    &none  &none  &none         &none             &none
            >;

            display-name = "adj";
        };

        mouse {
            bindings = <
&trans  &trans  &trans    &trans    &trans    &trans                    &trans  &trans    &trans    &trans    &trans  &trans
&trans  &mo 7   &mkp MB3  &mkp MB2  &mkp MB1  &mo 8                     &mo 8   &mkp MB1  &mkp MB2  &mkp MB3  &mo 7   &trans
&trans  &trans  &trans    &trans    &trans    &trans                    &trans  &trans    &trans    &trans    &trans  &trans
                &trans    &trans    &trans    &trans  &trans    &trans  &trans  &trans    &trans    &trans
            >;
        };

        scroll {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
            >;
        };

        sniper {
            bindings = <
&trans  &trans  &trans    &trans    &trans    &trans                    &trans  &trans    &trans    &trans    &trans  &trans
&trans  &trans  &mkp MB3  &mkp MB2  &mkp MB1  &trans                    &trans  &mkp MB1  &mkp MB2  &mkp MB3  &trans  &trans
&trans  &trans  &trans    &trans    &trans    &trans                    &trans  &trans    &trans    &trans    &trans  &trans
                &trans    &trans    &trans    &trans  &trans    &trans  &trans  &trans    &trans    &trans
            >;
        };

        service {
            display-name = "svc";
            bindings = <
&bootloader  &none  &none  &none  &none  &none                  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR
&none        &none  &none  &none  &none  &none                  &out OUT_BLE  &kp W         &none         &none         &none         &studio_unlock
&none        &none  &none  &none  &none  &none                  &out OUT_USB  &none         &none         &none         &none         &none
                    &none  &none  &none  &none  &none    &none  &none         &none         &none         &none
            >;
        };
    };
};

&trackball { cpi = <1000>; };

&trackball_listener {
    input-processors = <&zip_xy_scaler 9 20>;

    scroller {
        layers = <7>;
        input-processors =
            <&zip_xy_transform INPUT_TRANSFORM_Y_INVERT>,
            <&zip_xy_scaler 1 32>,
            <&zip_xy_to_scroll_mapper>;
    };

    sniper {
        layers = <8>;
        input-processors = <&zip_xy_scaler 1 4>;
    };
};
